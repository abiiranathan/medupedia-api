(()=>{"use strict";var e={755:(e,t)=>{async function s(e){const t=await fetch(e);if(200==t.status)return await t.json();throw new Error(t.statusText)}Object.defineProperty(t,"__esModule",{value:!0}),t.saveNewSign=t.saveNewSymptom=t.handleUpdateDisease=t.handleSaveNewDisease=t.fetchDiseases=t.fetchSigns=t.fetchSymptoms=void 0,t.fetchSymptoms=async()=>await s("/api/symptoms/?query={id,name,description}"),t.fetchSigns=async()=>await s("/api/signs/?query={id,name,description}"),t.fetchDiseases=async()=>await s("/api/diseases/?query={id,name,signs,symptoms,about}"),t.handleSaveNewDisease=async function(e){const t={method:"POST",body:JSON.stringify(e),headers:{"content-type":"application/json"}},s=await fetch("/api/diseases/",t),o=await s.json();if(201===s.status)return o;if("object"==typeof o&&(null==Object?void 0:Object.keys(o).includes("name")))throw new Error(`${e.name} has already been registered`);throw new Error(s.statusText)},t.handleUpdateDisease=async function(e,t){const s={method:"PATCH",body:JSON.stringify(t),headers:{"content-type":"application/json"}},o=await fetch(`/api/diseases/${e}/`,s),n=await o.json();if(o.ok)return n;throw new Error(o.statusText)},t.saveNewSymptom=async(e,t)=>{const s={method:"POST",body:JSON.stringify({name:e,description:t}),headers:{"content-type":"application/json"}},o=await fetch("/api/symptoms/",s),n=await o.json();if(o.ok)return n;throw new Error(o.statusText)},t.saveNewSign=async(e,t)=>{const s={method:"POST",body:JSON.stringify({name:e,description:t}),headers:{"content-type":"application/json"}},o=await fetch("/api/signs/",s),n=await o.json();if(o.ok)return n;throw new Error(o.statusText)}},176:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=e=>`\n        <li>\n            <span>${e.name}</span><br>\n            <span>${e.description}</span>\n        </li>`,o=e=>`\n        <li>\n            <span>${e.name}</span><br>\n            <span>${e.description}</span>\n        </li>`;t.default=function(e){var t;return`\n  <div class="disease-detail">\n    ${(null===(t=null==e?void 0:e.about)||void 0===t?void 0:t.length)>0?'<h4 class="section">Description</h4>':""}\n    <p id="disease__about">${e.about}</p>\n    ${e.symptoms.length>0?'<h4 class="section">Symptoms</h4>':""}\n    <ul id="disease__symptoms">\n        ${e.symptoms.map(s).join("\n")}\n    </ul>\n    ${e.signs.length>0?'<h4 class="section">Signs</h4>':""}\n    <ul id="disease__symptoms">\n        ${e.signs.map(o).join("\n")}\n    </ul>\n  </div>\n  `}},815:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.addModalFooterButtons=t.showDiseaseDetail=t.hideSpinner=t.showSpinner=t.hideErrorMessage=t.showErrorMessage=t.hideNameExists=t.showNameExists=t.openTab=t.editDisease=t.showHomePage=t.showEditForm=t.hideEditForm=t.hideDiseaseDetail=t.hideHomePage=t.populateDiseases=t.selectItems=t.setUpDiseases=t.setUpSigns=t.setUpSymptoms=t.setDOMState=t.header=t.regSignBtn=t.regSymptomBtn=t.editForm=t.addDiseaseForm=t.diseaseList=t.searchInput=t.rmvSignBtn=t.addSignBtn=t.filter_signs=t.chosen_signs=t.available_signs=t.rmvSymptomBtn=t.addSymptomBtn=t.filter_symptoms=t.chosen_symptoms=t.available_symptoms=t.tabWidget=t.tabs=void 0;const o=s(724),n=s(176),a=s(129);let i,r,l;function d(e){c(e),t.searchInput.addEventListener("input",(t=>{c(e.filter((e=>e.name.toLocaleLowerCase().indexOf(t.target.value.toLocaleLowerCase())>-1)))}))}function c(e,s=!0){var o,n;s&&(t.diseaseList.innerHTML="");for(const s of e){const e=document.createElement("li"),a=document.createTextNode(s.name);e.setAttribute("id",s.id.toString()),e.title=null!==(n=null===(o=s.about)||void 0===o?void 0:o.slice(0,20))&&void 0!==n?n:"",e.appendChild(a),t.diseaseList.appendChild(e),e.onclick=()=>u(s)}}function m(e){t.hideHomePage(),t.hideDiseaseDetail(),t.showEditForm(),t.editForm.querySelector(".disease-name").innerHTML=e.name,t.editForm.querySelector("#about").innerHTML=e.about,t.editForm.setAttribute("data-id",e.id.toString());const s=t.editForm.querySelector("#cancel-disease-edit"),n=t.editForm.querySelector("#available_symptoms"),a=t.editForm.querySelector("#chosen_symptoms"),l=t.editForm.querySelector("#filter_symptoms"),d=t.editForm.querySelector("button.arrow.right"),c=t.editForm.querySelector("button.arrow.left"),m=t.editForm.querySelector("#available_signs"),p=t.editForm.querySelector("#chosen_signs"),h=t.editForm.querySelector("#filter_signs"),y=t.editForm.querySelector("button.arrow.right.sign"),f=t.editForm.querySelector("button.arrow.left.sign");(e=>{new o.default(n,a,l,d,c,e).start()})(r),(e=>{new o.default(m,p,h,y,f,e).start()})(i),t.selectItems(n,e.symptoms,(()=>d.click())),t.selectItems(m,e.signs,(()=>y.click())),s.onclick=()=>{t.hideEditForm(),t.showHomePage(),u(e)}}function u(e){t.hideEditForm();const s=n.default(e);a.showDiseaseModal(e.name,s);const o=document.createElement("button");o.id="backButton",o.className="btn",o.innerHTML="Back";const i=document.createElement("button");i.id="editButton",i.className="btn",i.innerHTML="Edit",o.onclick=()=>t.showHomePage(),i.onclick=()=>m(e),a.addFooterButtons([o,i])}t.tabs=document.querySelectorAll(".tablinks"),t.tabWidget=document.querySelector(".tabWidget"),t.available_symptoms=document.getElementById("available_symptoms"),t.chosen_symptoms=document.getElementById("chosen_symptoms"),t.filter_symptoms=document.getElementById("filter_symptoms"),t.addSymptomBtn=document.querySelector("button.arrow.right"),t.rmvSymptomBtn=document.querySelector("button.arrow.left"),t.available_signs=document.getElementById("available_signs"),t.chosen_signs=document.getElementById("chosen_signs"),t.filter_signs=document.getElementById("filter_signs"),t.addSignBtn=document.querySelector("button.arrow.right.sign"),t.rmvSignBtn=document.querySelector("button.arrow.left.sign"),t.searchInput=document.querySelector(".search-diseases"),t.diseaseList=document.querySelector("#disease_list"),t.addDiseaseForm=document.querySelector("#add-disease-form"),t.editForm=document.getElementById("edit-disease-form"),t.regSymptomBtn=document.querySelector(".add-symptom"),t.regSignBtn=document.querySelector(".add-sign"),t.header=document.querySelector("header"),t.setDOMState=(e,s,o)=>{l=e,i=o,r=s,t.setUpSymptoms(s),t.setUpSigns(o),d(e)},t.setUpSymptoms=e=>{new o.default(t.available_symptoms,t.chosen_symptoms,t.filter_symptoms,t.addSymptomBtn,t.rmvSymptomBtn,e).start()},t.setUpSigns=e=>{new o.default(t.available_signs,t.chosen_signs,t.filter_signs,t.addSignBtn,t.rmvSignBtn,e).start()},t.setUpDiseases=d,t.selectItems=(e,t,s=(()=>{}))=>{for(let s=0;s<e.options.length;s++){const o=e.options[s];t.map((e=>e.name)).includes(o.value)?null==o||o.setAttribute("selected","selected"):null==o||o.removeAttribute("selected")}s&&s()},t.populateDiseases=c,t.hideHomePage=()=>t.tabWidget.style.display="none",t.hideDiseaseDetail=()=>a.closeModal(),t.hideEditForm=()=>t.editForm.style.display="none",t.showEditForm=()=>t.editForm.style.display="block",t.showHomePage=()=>{t.tabWidget.style.display="block",t.hideEditForm(),a.closeModal()},t.editDisease=m,t.openTab=function(e,t){let s,o,n;for(o=document.querySelectorAll(".tabcontent"),s=0;s<o.length;s++)o[s].style.display="none";for(n=document.querySelectorAll(".tablinks"),s=0;s<n.length;s++)n[s].className=n[s].className.replace(" active","");document.getElementById(t).style.display="block",e.currentTarget.className+=" active"},t.showNameExists=function(e){const t=document.querySelectorAll(".error-response");for(let s=0;s<t.length;s++){const o=t[s];o.innerHTML=e,o.style.visibility="visible"}},t.hideNameExists=()=>{const e=document.querySelectorAll(".error-response");for(let t=0;t<e.length;t++)e[t].style.visibility="hidden"},t.showErrorMessage=()=>{document.querySelector(".no-connection").style.display="block"},t.hideErrorMessage=()=>{document.querySelector(".no-connection").style.display="none"},t.showSpinner=()=>{document.querySelector(".loading").style.display="block"},t.hideSpinner=()=>{document.querySelector(".loading").style.display="none"},t.showDiseaseDetail=u,t.addModalFooterButtons=function(e,s,o){const n=document.createElement("button");n.id="cancelButton",n.className="btn",n.innerHTML="Cancel";const i=document.createElement("button");i.id="saveButton",i.className="btn",i.innerHTML="Save",a.addFooterButtons([i,n]);const r=document.querySelector(".modal").querySelector(`#${e}-form`);function l(){const n=r.querySelector("#name").value,i=r.querySelector("#desc").value;""!==n.trim()&&n.length<200&&s(n,i).then((s=>{if(a.closeModal(),t.showHomePage(),"symptom"===e){const e=document.createElement("option");e.value=s.name,e.innerHTML=s.name,t.available_symptoms.appendChild(e)}else if("sign"===e){const e=document.createElement("option");e.value=s.name,e.innerHTML=s.name,t.available_signs.appendChild(e)}o(s),alert(`${e} saved successfully!`)})).catch((e=>{console.log(e),alert("Something went wrong...")}))}n.onclick=()=>t.showHomePage(),i.onclick=()=>l(),r.onsubmit=e=>{e.preventDefault(),l()}}},724:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t,s,o,n,a){this.start=()=>{this.addBtn.addEventListener("click",(()=>{const e=Array.from(this.available.selectedOptions).map((e=>e.value)),t=Array.from(this.chosen.options).map((e=>e.value));for(const s of e)t.includes(s)||this.addToChosenData(s)})),this.removeBtn.addEventListener("click",(()=>{var e;const t=Array.from(this.chosen.selectedOptions).map((e=>e.value));for(const s of t)null===(e=this.chosen.querySelector(`option[value="${s}"]`))||void 0===e||e.remove(),this.addToAvailable(s)})),this.filter.addEventListener("input",(e=>this.filterData(e.target.value,this.initialData))),this.setData(this.initialData)},this.setData=e=>{this.available.innerHTML="";const t=Array.from(this.chosen.options).map((e=>e.value));e.filter((e=>!t.includes(e.name))).forEach((({name:e})=>{const t=document.createElement("option");t.value=e,t.appendChild(document.createTextNode(e)),this.available.appendChild(t)}))},this.filterData=(e,t)=>{if(""!==e){const s=t.filter((t=>t.name.toLowerCase().indexOf(e.toLowerCase())>-1));this.setData(s)}else this.setData(t)},this.addToChosenData=e=>{const t=document.createElement("option");t.value=e,t.appendChild(document.createTextNode(e)),this.chosen.appendChild(t),this.removeFromAvailable(e)},this.removeFromAvailable=e=>{var t;null===(t=this.available.querySelector(`option[value="${e}"]`))||void 0===t||t.remove()},this.addToAvailable=e=>{const t=document.createElement("option");t.value=e,t.appendChild(document.createTextNode(e)),this.available.appendChild(t)},this.available=e,this.chosen=t,this.filter=s,this.addBtn=o,this.removeBtn=n,this.initialData=a}}},337:(e,t,s)=>{const o=s(755),n=s(815);s(129);const a=s(129);let i,r,l;n.addDiseaseForm.addEventListener("submit",(e=>{e.preventDefault(),r&&i&&l&&o.handleSaveNewDisease((()=>{const e=n.addDiseaseForm.querySelector("#name").value,t=n.addDiseaseForm.querySelector("#about").value;return{name:e,symptoms:r.filter((e=>Array.from(n.chosen_symptoms.options).map((e=>e.value)).includes(e.name))),signs:i.filter((e=>Array.from(n.chosen_signs.options).map((e=>e.value)).includes(e.name))),about:t}})()).then((e=>{n.populateDiseases([e],!1),n.hideDiseaseDetail(),n.chosen_signs.innerHTML="",n.chosen_symptoms.innerHTML="";const t=Array.from(n.chosen_symptoms.options).map((e=>e.value)),s=r.filter((e=>t.includes(e.name))),o=Array.from(n.chosen_signs.options).map((e=>e.value)),a=r.filter((e=>o.includes(e.name)));n.selectItems(n.available_symptoms,s),n.selectItems(n.available_signs,a),n.rmvSymptomBtn.click(),n.rmvSignBtn.click();const i=document.querySelector("#add-disease-form #name");i&&(i.value="",i.focus(),i.scrollIntoView({behavior:"smooth"})),alert(`${e.name} registered successfully!`)})).catch((e=>{n.showNameExists(e)}))})),n.addDiseaseForm.querySelector("#name").addEventListener("input",(e=>{const t=e.target,s=t.value.trim(),o=`${s} is already registered`;l.map((e=>e.name)).includes(s)?(t.style.borderColor="tomato",n.showNameExists(o)):(t.style.borderColor="lightblue",n.hideNameExists())})),n.editForm.addEventListener("submit",(async e=>{e.preventDefault();const t=e.currentTarget,s=t.querySelector("#chosen_symptoms"),n=t.querySelector("#chosen_signs"),a=t.getAttribute("data-id");if(a){const e=t.querySelector("#about").value,l={symptoms:r.filter((e=>Array.from(s.options).map((e=>e.value)).includes(e.name))),signs:i.filter((e=>Array.from(n.options).map((e=>e.value)).includes(e.name))),about:e};try{const e=await o.handleUpdateDisease(a,l);alert(`${e.name} updated successfully! The page will refresh for changes!`),window.location.reload()}catch(e){console.log(e)}}})),n.regSymptomBtn.onclick=()=>{a.showSymptomModal(),n.addModalFooterButtons("symptom",o.saveNewSymptom,(e=>r.push(e)))},n.regSignBtn.onclick=()=>{a.showSignModal(),n.addModalFooterButtons("sign",o.saveNewSign,(e=>i.push(e)))},document.addEventListener("DOMContentLoaded",(async()=>{for(let e=0;e<n.tabs.length;e++){const t=n.tabs[e];t.addEventListener("click",(e=>{n.openTab(e,t.getAttribute("data-target"))})),document.querySelector("button[defaultOpen]").click()}try{n.showSpinner();let[e,t,s]=await Promise.all([o.fetchDiseases(),o.fetchSymptoms(),o.fetchSigns()]);n.hideErrorMessage(),r=t,i=s,l=e,n.setDOMState(l,r,i)}catch(e){n.showErrorMessage()}finally{n.hideSpinner()}const e=document.querySelector(".container");let t=!1;e.onscroll=e=>{if(t)return!1}}))},129:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.showSignModal=t.showSymptomModal=t.showDiseaseModal=t.addFooterButtons=t.closeModal=void 0;const s=document.querySelector(".modal"),o=document.querySelector(".overlay"),n=s.querySelector(".modal-header .modal-title"),a=s.querySelectorAll(".modal-close"),i=s.querySelector(".modal-body .modal-content"),r=s.querySelector(".modal-footer .action-buttons");t.closeModal=(e=(()=>{}))=>{document.body.classList.remove("modal-open"),o.classList.remove("modal-open"),s.classList.remove("open"),e()};const l=()=>{document.body.classList.add("modal-open"),o.classList.add("modal-open"),s.classList.add("open")};a.forEach((e=>{e.addEventListener("click",(()=>t.closeModal()))})),t.addFooterButtons=e=>{r.innerHTML="",e.forEach((e=>r.appendChild(e)))},t.showDiseaseModal=(e,t)=>{n.innerHTML=e,i.innerHTML=t,l()},t.showSymptomModal=()=>{n.innerHTML="New symptom",i.innerHTML='\n  <form id="symptom-form"  class="feature-form">\n    <fieldset>\n      <legend>Register new medical symptom</legend>\n      <div className="form-group">\n        <label for="name">Name: </label>\n        <input id="name" name="name" class="form-input" autocomplete="off" required/>\n      </div>\n      <div className="form-group">\n        <label for="desc">Description: </label>\n        <textarea id="desc" name="description" cols="30" rows="5"></textarea>\n      </div>\n    </fieldset>\n  </form>\n  ',l()},t.showSignModal=()=>{n.innerHTML="New medical sign",i.innerHTML='\n  <form id="sign-form" class="feature-form">\n    <fieldset>\n      <legend>Register new medical sign</legend>\n      <div class="form-group">\n        <label for="name">Name: </label>\n        <input id="name" name="name" class="form-input" autocomplete="off" required/>\n      </div>\n      <div class="form-group">\n        <label for="desc">Description: </label>\n        <textarea id="desc" name="description"  cols="30" rows="5"></textarea>\n      </div>\n    </fieldset>\n  </form>\n  ',l()}}},t={};!function s(o){if(t[o])return t[o].exports;var n=t[o]={exports:{}};return e[o](n,n.exports,s),n.exports}(337)})();
//# sourceMappingURL=main.js.map